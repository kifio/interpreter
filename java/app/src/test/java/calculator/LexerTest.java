/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package calculator;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import java.util.ArrayList;

public class LexerTest {

    private ArrayList<Token> expectedTokensSingleNumber = new ArrayList<>();
    private ArrayList<Token> expectedTokensTwoNumbers = new ArrayList<>();
    private ArrayList<Token> expectedTokensThreeNumbers = new ArrayList<>();
    private ArrayList<Token> expectedTokensThreeNumbersMultiDigits = new ArrayList<>();
    private ArrayList<Token> expectedTokensMultiplicationDivision = new ArrayList<>();

    // @Before
    // public void setUp() throws Exception {
    //     expectedTokensSingleNumber.add(new Token("222", TokenType.INTEGER));
    //     expectedTokensSingleNumber.add(Token.EOF);

    //     expectedTokensTwoNumbers.add(new Token("2", TokenType.INTEGER));
    //     expectedTokensTwoNumbers.add(Token.PLUS);
    //     expectedTokensTwoNumbers.add(new Token("2", TokenType.INTEGER));
    //     expectedTokensTwoNumbers.add(Token.EOF);

    //     expectedTokensThreeNumbers.add(new Token("1", TokenType.INTEGER));
    //     expectedTokensThreeNumbers.add(Token.PLUS);
    //     expectedTokensThreeNumbers.add(new Token("1", TokenType.INTEGER));
    //     expectedTokensThreeNumbers.add(Token.PLUS);
    //     expectedTokensThreeNumbers.add(new Token("1", TokenType.INTEGER));
    //     expectedTokensThreeNumbers.add(Token.EOF);

    //     expectedTokensThreeNumbersMultiDigits.add(new Token("1", TokenType.INTEGER));
    //     expectedTokensThreeNumbersMultiDigits.add(Token.PLUS);
    //     expectedTokensThreeNumbersMultiDigits.add(new Token("12", TokenType.INTEGER));
    //     expectedTokensThreeNumbersMultiDigits.add(Token.PLUS);
    //     expectedTokensThreeNumbersMultiDigits.add(new Token("123", TokenType.INTEGER));
    //     expectedTokensThreeNumbersMultiDigits.add(Token.EOF);

        
    //     expectedTokensMultiplicationDivision.add(new Token("1", TokenType.INTEGER));
    //     expectedTokensMultiplicationDivision.add(Token.MULTIPLY);
    //     expectedTokensMultiplicationDivision.add(new Token("12", TokenType.INTEGER));
    //     expectedTokensMultiplicationDivision.add(Token.DIVIDE);
    //     expectedTokensMultiplicationDivision.add(new Token("123", TokenType.INTEGER));
    //     expectedTokensMultiplicationDivision.add(Token.EOF);
    // }

    // @Test 
    // public void testInvalidInput() {
    //     assertThrows(IllegalStateException.class, () -> { TestCommon.getTokens("2+"); });
    //     assertThrows(IllegalStateException.class, () -> { TestCommon.getTokens("2 +"); });
    //     assertThrows(IllegalStateException.class, () -> { TestCommon.getTokens("2 22"); });
    //     assertThrows(IllegalStateException.class, () -> { TestCommon.getTokens(""); });
    // }

    // @Test 
    // public void testValidInput() {
    //     assertEquals(expectedTokensSingleNumber, TestCommon.getTokens("222"));
    //     assertEquals(TestCommon.getTokens("2+2"), expectedTokensTwoNumbers);
    //     assertEquals(TestCommon.getTokens(" 2 + 2 "), expectedTokensTwoNumbers);
    //     assertEquals(TestCommon.getTokens("2 + 2"), expectedTokensTwoNumbers);
    //     assertEquals(TestCommon.getTokens("1+1+1"), expectedTokensThreeNumbers);
    //     assertEquals(TestCommon.getTokens(" 1 + 1+1 "), expectedTokensThreeNumbers);
    //     assertEquals(TestCommon.getTokens("1+12+123"), expectedTokensThreeNumbersMultiDigits);
    //     assertEquals(TestCommon.getTokens(" 1 + 12 + 123 "), expectedTokensThreeNumbersMultiDigits);
    //     assertEquals(TestCommon.getTokens("1*12/123"), expectedTokensMultiplicationDivision);
    //     assertEquals(TestCommon.getTokens(" 1*12/123"), expectedTokensMultiplicationDivision);
    //     assertEquals(TestCommon.getTokens("1*12/123 "), expectedTokensMultiplicationDivision);
    //     assertEquals(TestCommon.getTokens(" 1*12/123 "), expectedTokensMultiplicationDivision);
    //     assertEquals(TestCommon.getTokens(" 1 * 12 / 123 "), expectedTokensMultiplicationDivision);
    //     assertEquals(TestCommon.getTokens("1 * 12 / 123"), expectedTokensMultiplicationDivision);
    //     assertEquals(TestCommon.getTokens("1*12 / 123"), expectedTokensMultiplicationDivision);
    //     assertEquals(TestCommon.getTokens("1 * 12/123"), expectedTokensMultiplicationDivision);
    // }
}
